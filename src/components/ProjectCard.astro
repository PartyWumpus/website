---
export interface Props {
  title: string;
  body: string;
  href: string;
  tags?: string[] | undefined;
  date?: string | undefined;
}

const { href, title, body, tags, date } = Astro.props;
const tagFiles = Object.keys(import.meta.glob("/public/tags/*"));
const tagsIcons = Object.fromEntries(
  tagFiles.map((tag) => [
    tag.replace(/\.[^/.]+$/, "").replace("/public/tags/", ""),
    tag.replace("/public", ""),
  ]),
);
---

<li class="link-card" title={title}>
  <a href={href}>
    <h2>
      {title}
      <span>&rarr;</span>
    </h2>
    <p>
      {body}
    </p>
    <div>
        {
          tags
            ? tags.map((tag) => {
                if (tagsIcons[tag] !== undefined) {
                  return (
                  <div
                      class="tag"
                      style=`background-image:url(${tagsIcons[tag]})`
                      title={tag}
                    >
                    &nbsp;
                    &nbsp;
                  </div>
                  );
                } else {
                  return <span class="tag">{tag}</span>;
                }
              })
            : ""
        }
        {date ? <span title={`(Abandoned ${date})`} class="date">{`Finished: ${date}`}</span> : null}
    </div>
  </a>
</li>
<style>
  .link-card {
    list-style: none;
    margin-bottom: 0.6em;
    display: flex;
    padding: 1px;
    background-color: #23262d;
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: white;
    background-color: #23262d;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
  .date {
    display: inline-block;
    float: right;
  }
  .tag {
    display: inline-block;
    list-style: none;
    padding: 0.1em 0.25em;
    margin-right: 0.3em;
    background-color: #282c34;
    background-color: white;
    color: black;
    border-radius: 7px;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);

    background-repeat: no-repeat;
    background-size: contain;
    background-origin: content-box;
    background-position: center center;
    vertical-align: middle;
  }
</style>
